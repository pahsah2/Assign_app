{"version":3,"sources":["constants/userConstants.js","constants/customerConstants.js","store.js","reducers/userReducer.js","reducers/customerReducer.js","components/FormContainer.js","screens/LoginScreen.js","actions/userActions.js","screens/RegisterScreen.js","components/Header.js","actions/customerActions.js","screens/CustomerScreen.js","screens/CustomerEditScreen.js","screens/AddcustomerScreen.js","screens/DetailCustomerScreen.js","screens/PDFScreen.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","CUSTOMER_LIST_REQUEST","CUSTOMER_LIST_SUCCESS","CUSTOMER_LIST_FAIL","CUSTOMER_LIST_RESET","CUSTOMER_DELETE_REQUEST","CUSTOMER_DELETE_SUCCESS","CUSTOMER_DELETE_FAIL","CUSTOMER_DETAILS_REQUEST","CUSTOMER_DETAILS_SUCCESS","CUSTOMER_DETAILS_FAIL","CUSTOMER_DETAILS_RESET","CUSTOMER_UPDATE_REQUEST","CUSTOMER_UPDATE_SUCCESS","CUSTOMER_UPDATE_FAIL","CUSTOMER_UPDATE_RESET","CUSTOMER_CREATE_REQUEST","CUSTOMER_CREATE_SUCCESS","CUSTOMER_CREATE_FAIL","CUSTOMER_CREATE_RESET","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","userDetails","user","userList","users","customerList","customers","customerDelete","success","customerCreate","customer","customerDetails","customerUpdate","initialState","localStorage","getItem","JSON","parse","clear","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","FormContainer","children","Container","Row","className","Col","ms","md","LoginScreen","location","history","useState","email","setEmail","password","setPassword","dispatch","useDispatch","useSelector","redirect","search","split","useEffect","push","Form","onSubmit","e","preventDefault","a","config","headers","axios","post","data","setItem","stringify","response","message","login","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","variant","to","RegisterScreen","name","setName","confirmPassword","setConfirmPassword","alert","register","Header","Navbar","bg","expand","collapseOnSelect","Brand","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","Link","onClick","removeItem","document","href","getCustomerDetails","getState","Authorization","token","get","CustomerScreen","successDelete","deleteHandler","window","confirm","delete","deleteCustomer","isAdmin","Table","bordered","responsive","hover","map","_id","phone","house","description","createdAt","substring","updatedAt","status1","style","color","status2","status3","status4","CustomEditScreen","match","customerId","params","setPhone","setHouse","setDescription","setStatus1","setStatus2","setStatus3","setStatus4","successUpdate","put","updateCustomer","as","rows","Check","inline","label","checked","customerInfo","createCustomer","DetailCustomerScreen","styles","StyleSheet","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","ids","PDFScreen","width","height","position","float","print","size","App","basename","path","exact","component","AddcustomerScreen","CustomerEditScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.479ba2fd.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n","export const CUSTOMER_LIST_REQUEST = 'CUSTOMER_LIST_REQUEST'\r\nexport const CUSTOMER_LIST_SUCCESS = 'CUSTOMER_LIST_SUCCESS'\r\nexport const CUSTOMER_LIST_FAIL = 'CUSTOMER_LIST_FAIL'\r\nexport const CUSTOMER_LIST_RESET = 'CUSTOMER_LIST_RESET'\r\n\r\nexport const CUSTOMER_DELETE_REQUEST = 'CUSTOMER_DELETE_REQUEST'\r\nexport const CUSTOMER_DELETE_SUCCESS = 'CUSTOMER_DELETE_SUCCESS'\r\nexport const CUSTOMER_DELETE_FAIL = 'CUSTOMER_DELETE_FAIL'\r\n\r\nexport const CUSTOMER_DETAILS_REQUEST = 'CUSTOMER_DETAILS_REQUEST'\r\nexport const CUSTOMER_DETAILS_SUCCESS = 'CUSTOMER_DETAILS_SUCCESS'\r\nexport const CUSTOMER_DETAILS_FAIL = 'CUSTOMER_DETAILS_FAIL'\r\nexport const CUSTOMER_DETAILS_RESET = 'CUSTOMER_DETAILS_RESET'\r\n\r\nexport const CUSTOMER_UPDATE_REQUEST = 'CUSTOMER_UPDATE_REQUEST'\r\nexport const CUSTOMER_UPDATE_SUCCESS = 'CUSTOMER_UPDATE_SUCCESS'\r\nexport const CUSTOMER_UPDATE_FAIL = 'CUSTOMER_UPDATE_FAIL'\r\nexport const CUSTOMER_UPDATE_RESET = 'CUSTOMER_UPDATE_RESET'\r\n\r\nexport const CUSTOMER_CREATE_REQUEST = 'CUSTOMER_CREATE_REQUEST'\r\nexport const CUSTOMER_CREATE_SUCCESS = 'CUSTOMER_CREATE_SUCCESS'\r\nexport const CUSTOMER_CREATE_FAIL = 'CUSTOMER_CREATE_FAIL'\r\nexport const CUSTOMER_CREATE_RESET = 'CUSTOMER_CREATE_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userListReducer,\r\n} from './reducers/userReducer'\r\n\r\nimport {\r\n  customerListReducer,\r\n  customerDeleteReducer,\r\n  customerCreateReducer,\r\n  customerDetailsReducer,\r\n  customerUpdateReducer,\r\n} from './reducers/customerReducer'\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userList: userListReducer,\r\n  customerList: customerListReducer,\r\n  customerDelete: customerDeleteReducer,\r\n  customerCreate: customerCreateReducer,\r\n  customerDetails: customerDetailsReducer,\r\n  customerUpdate: customerUpdateReducer,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : localStorage.clear()\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  CUSTOMER_LIST_SUCCESS,\r\n  CUSTOMER_LIST_REQUEST,\r\n  CUSTOMER_LIST_FAIL,\r\n  CUSTOMER_LIST_RESET,\r\n  CUSTOMER_DELETE_REQUEST,\r\n  CUSTOMER_DELETE_SUCCESS,\r\n  CUSTOMER_DELETE_FAIL,\r\n  CUSTOMER_CREATE_REQUEST,\r\n  CUSTOMER_CREATE_SUCCESS,\r\n  CUSTOMER_CREATE_FAIL,\r\n  CUSTOMER_CREATE_RESET,\r\n  CUSTOMER_DETAILS_REQUEST,\r\n  CUSTOMER_DETAILS_SUCCESS,\r\n  CUSTOMER_DETAILS_FAIL,\r\n  CUSTOMER_DETAILS_RESET,\r\n  CUSTOMER_UPDATE_REQUEST,\r\n  CUSTOMER_UPDATE_SUCCESS,\r\n  CUSTOMER_UPDATE_FAIL,\r\n  CUSTOMER_UPDATE_RESET,\r\n} from '../constants/customerConstants'\r\n\r\nexport const customerListReducer = (state = { customers: [] }, action) => {\r\n  switch (action.type) {\r\n    case CUSTOMER_LIST_REQUEST:\r\n      return { loading: true, customers: [] }\r\n    case CUSTOMER_LIST_SUCCESS:\r\n      return { loading: false, customers: action.payload }\r\n    case CUSTOMER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case CUSTOMER_LIST_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const customerDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CUSTOMER_DELETE_REQUEST:\r\n      return { loading: true, ...state }\r\n    case CUSTOMER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case CUSTOMER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const customerCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CUSTOMER_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case CUSTOMER_CREATE_SUCCESS:\r\n      return { loading: false, success: true, customer: action.payload }\r\n    case CUSTOMER_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case CUSTOMER_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const customerDetailsReducer = (state = { customer: {} }, action) => {\r\n  switch (action.type) {\r\n    case CUSTOMER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case CUSTOMER_DETAILS_SUCCESS:\r\n      return { loading: false, customer: action.payload }\r\n    case CUSTOMER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case CUSTOMER_DETAILS_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const customerUpdateReducer = (state = { customer: {} }, action) => {\r\n  switch (action.type) {\r\n    case CUSTOMER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case CUSTOMER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case CUSTOMER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case CUSTOMER_UPDATE_RESET:\r\n      return { customer: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col ms={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  const redirect = location.search ? location.search.split('=')[2] : '/customer'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <br></br>\r\n      <h2>Sign In</h2>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password Address</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            New User? &nbsp;\r\n            <Link\r\n              to={redirect ? `/register?redirect=${redirect}` : '/register'}\r\n            >\r\n              Register\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import axios from 'axios'\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_RESET,\r\n} from '../constants/userConstants'\r\n\r\nimport {\r\n  CUSTOMER_DETAILS_RESET,\r\n  CUSTOMER_LIST_RESET,\r\n} from '../constants/customerConstants'\r\n\r\n//////////// ล็อกอิน //////////////\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n/////////////////ล็อกเอ้าท์ + เคลีย Token และ ข้อมูลในlocal ////////////////////\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  localStorage.removeItem('customerInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n  dispatch({ type: CUSTOMER_LIST_RESET })\r\n  dispatch({ type: CUSTOMER_DETAILS_RESET })\r\n  document.location.href = '/'\r\n}\r\n\r\n////////////////////สมัครไอดี/////////////////\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n////////////////////แสดงรายละเอียด user////////////////////\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Pah ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorizated , token failed')\r\n      dispatch({\r\n        type: USER_DETAILS_FAIL,\r\n        payload: message,\r\n      })\r\n  }\r\n}\r\n\r\n////////////////////////แสดง user ทั้งหมด/////////////////////////\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Pah ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorizated, token failed')\r\n      dispatch({\r\n        type: USER_LIST_FAIL,\r\n        payload: message,\r\n      })\r\n  }\r\n}\r\n\r\n///////////////////////////////\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      alert('Password do not match')\r\n    }\r\n    dispatch(register(name, email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <br></br>\r\n      <h2>Register</h2>\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password </Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"confirmpassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            <Link to={redirect ? `/?redirect=${redirect}` : '/'}>Sign In</Link>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { logout } from '../actions/userActions'\r\nconst Header = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/customer\">\r\n            <Navbar.Brand>MyWork</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/customer\">\r\n                    <NavDropdown.Item>Customer</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/\">\r\n                  <Nav.Link>\r\n                    <i className=\"fa fa-sign-in\"></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo ? (\r\n                <Nav.Link onClick={logoutHandler}>\r\n                  <i className=\"fa fa-sign-in\"></i> Logout\r\n                </Nav.Link>\r\n              ) : null}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios'\r\nimport {\r\n  CUSTOMER_LIST_SUCCESS,\r\n  CUSTOMER_LIST_REQUEST,\r\n  CUSTOMER_LIST_FAIL,\r\n  CUSTOMER_DELETE_REQUEST,\r\n  CUSTOMER_DELETE_SUCCESS,\r\n  CUSTOMER_DELETE_FAIL,\r\n  CUSTOMER_CREATE_REQUEST,\r\n  CUSTOMER_CREATE_SUCCESS,\r\n  CUSTOMER_CREATE_FAIL,\r\n  CUSTOMER_DETAILS_REQUEST,\r\n  CUSTOMER_DETAILS_SUCCESS,\r\n  CUSTOMER_DETAILS_FAIL,\r\n  CUSTOMER_UPDATE_REQUEST,\r\n  CUSTOMER_UPDATE_SUCCESS,\r\n  CUSTOMER_UPDATE_FAIL,\r\n} from '../constants/customerConstants'\r\n\r\nexport const listCustomers = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CUSTOMER_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get('/api/customers')\r\n\r\n    dispatch({\r\n      type: CUSTOMER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === `\"CAN'T SHOW CUSTOMER IN DATABASE \"`)\r\n      dispatch({\r\n        type: CUSTOMER_LIST_FAIL,\r\n        payload: message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteCustomer = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: CUSTOMER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Pah ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/customers/${id}`, config)\r\n    dispatch({\r\n      type: CUSTOMER_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorizated , token failed')\r\n      dispatch({\r\n        type: CUSTOMER_DELETE_FAIL,\r\n        payload: message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const createCustomer =\r\n  (\r\n    name,\r\n    email,\r\n    phone,\r\n    house,\r\n    description,\r\n    status1,\r\n    status2,\r\n    status3,\r\n    status4\r\n  ) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: CUSTOMER_CREATE_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Pah ${userInfo.token}`,\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n        `/api/customers`,\r\n        {\r\n          name,\r\n          email,\r\n          phone,\r\n          house,\r\n          description,\r\n          status1,\r\n          status2,\r\n          status3,\r\n          status4,\r\n        },\r\n        config\r\n      )\r\n\r\n      dispatch({\r\n        type: CUSTOMER_CREATE_SUCCESS,\r\n        payload: data,\r\n      })\r\n\r\n      localStorage.setItem('customerInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CUSTOMER_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const getCustomerDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: CUSTOMER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Pah ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/customers/${id}`, config)\r\n\r\n    dispatch({\r\n      type: CUSTOMER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorizated, token fail')\r\n      dispatch({\r\n        type: CUSTOMER_DETAILS_FAIL,\r\n        payload: message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateCustomer = (customer) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: CUSTOMER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Pah ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/customers/${customer._id}`,\r\n      customer,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: CUSTOMER_UPDATE_SUCCESS,\r\n    })\r\n\r\n    dispatch({\r\n      type: CUSTOMER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorizated, token fail')\r\n      dispatch({\r\n        type: CUSTOMER_UPDATE_FAIL,\r\n        payload: message,\r\n      })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { listCustomers, deleteCustomer } from '../actions/customerActions'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport { Link } from 'react-router-dom'\r\nconst CustomerScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const customerList = useSelector((state) => state.customerList)\r\n  const { customers } = customerList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const customerDelete = useSelector((state) => state.customerDelete)\r\n  const { success: successDelete } = customerDelete\r\n\r\n  useEffect(() => {\r\n    dispatch(listCustomers())\r\n  }, [dispatch, history, userInfo, successDelete])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('ต้องการลบหรือไม่')) {\r\n      dispatch(deleteCustomer(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <br></br>\r\n      <Row>\r\n        <Col className=\"md-4 \">\r\n          <h1>ข้อมูลลูกค้า</h1>\r\n        </Col>\r\n        <Col className=\"md-4 text-right\">\r\n          <LinkContainer to={`/customer/add`}>\r\n            <Button className=\"my-3\">\r\n              <i className=\"fa fa-plus\"></i> Create Product\r\n            </Button>\r\n          </LinkContainer>\r\n        </Col>\r\n      </Row>\r\n      <br></br>\r\n      {userInfo && userInfo.isAdmin ? (\r\n        <Row>\r\n          <Col>\r\n            <Table bordered responsive hover className=\"table-lg\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Id</th>\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                  <th>Phone</th>\r\n                  <th>House</th>\r\n                  <th>Description</th>\r\n                  <th>User</th>\r\n                  <th>Date</th>\r\n                  <th>Update time</th>\r\n                  <th>Edit</th>\r\n                  <th>Delete</th>\r\n                  <th>PDF</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {customers.map((customer) => (\r\n                  <tr key={customer._id}>\r\n                    <td>\r\n                      <Link to={`/customer/${customer._id}`}>\r\n                        {customer._id}\r\n                      </Link>\r\n                    </td>\r\n                    <td>{customer.name}</td>\r\n                    <td>{customer.email}</td>\r\n                    <td>{customer.phone}</td>\r\n                    <td>{customer.house}</td>\r\n                    <td>{customer.description}</td>\r\n                    <td>{customer.user.name}</td>\r\n                    <td>{customer.createdAt.substring(0, 10)}</td>\r\n                    <td>{customer.updatedAt.substring(0, 10)}</td>\r\n                    <td>\r\n                      <LinkContainer to={`/customer/${customer._id}/edit`}>\r\n                        <Button variant=\"light\" className=\"btn-sm\">\r\n                          <i className=\"fa fa-edit\"></i>\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                    <td>\r\n                      {\r\n                        <Button\r\n                          variant=\"danger\"\r\n                          className=\"btn-sm\"\r\n                          onClick={() => deleteHandler(customer._id)}\r\n                        >\r\n                          <i className=\"fa fa-trash\"></i>\r\n                        </Button>\r\n                      }\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`/customer/${customer._id}/pdf`}>\r\n                        <Button variant=\"dark\" className=\"btn-sm\">\r\n                          <i className=\"fa fa-file-pdf-o\"></i>\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                    <td>\r\n                      {customer.status1 ? (\r\n                        <i className=\"fa fa-check\" style={{ color: 'yellow' }}>\r\n                          ส่งเสร็จ\r\n                        </i>\r\n                      ) : null}\r\n                      {customer.status2 ? (\r\n                        <i className=\"fa fa-check\" style={{ color: 'orange' }}>\r\n                          พิจารณา\r\n                        </i>\r\n                      ) : null}\r\n                      {customer.status3 ? (\r\n                        <i className=\"fa fa-check\" style={{ color: 'green' }}>\r\n                          อนุมัติ\r\n                        </i>\r\n                      ) : null}\r\n                      {customer.status4 ? (\r\n                        <i className=\"fa fa-times\" style={{ color: 'red' }}>\r\n                          ปฏิเสธ\r\n                        </i>\r\n                      ) : null}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      ) : (\r\n        <Row>\r\n          <Col>\r\n            <Table bordered responsive hover className=\"table-lg\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Id</th>\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                  <th>Phone</th>\r\n                  <th>House</th>\r\n                  <th>Description</th>\r\n                  <th>Date</th>\r\n                  <th>Update Time</th>\r\n                  <th>Edit</th>\r\n                  <th>Delete</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {customers.map((customer) => (\r\n                  <tr key={customer._id}>\r\n                    <td>{customer._id}</td>\r\n                    <td>{customer.name}</td>\r\n                    <td>{customer.email}</td>\r\n                    <td>{customer.phone}</td>\r\n                    <td>{customer.house}</td>\r\n                    <td>{customer.description}</td>\r\n                    <td>{customer.createdAt.substring(0, 10)}</td>\r\n                    <td>{customer.updatedAt.substring(0, 10)}</td>\r\n                    <td>\r\n                      <LinkContainer to={`/customer/${customer._id}/edit`}>\r\n                        <Button variant=\"light\" className=\"btn-sm\">\r\n                          <i className=\"fa fa-edit\"></i>\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                    <td>\r\n                      {\r\n                        <Button\r\n                          type=\"button\"\r\n                          variant=\"danger\"\r\n                          className=\"btn-sm\"\r\n                          onClick={() => deleteHandler(customer._id)}\r\n                        >\r\n                          <i className=\"fa fa-trash\"></i>\r\n                        </Button>\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomerScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getCustomerDetails, updateCustomer } from '../actions/customerActions'\r\nimport { CUSTOMER_UPDATE_RESET } from '../constants/customerConstants'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nconst CustomEditScreen = ({ match, history }) => {\r\n  const customerId = match.params.id\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [house, setHouse] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [status1, setStatus1] = useState(false)\r\n  const [status2, setStatus2] = useState(false)\r\n  const [status3, setStatus3] = useState(false)\r\n  const [status4, setStatus4] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const customerDetails = useSelector((state) => state.customerDetails)\r\n  const { customer } = customerDetails\r\n\r\n  const customerUpdate = useSelector((state) => state.customerUpdate)\r\n  const { success: successUpdate } = customerUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: CUSTOMER_UPDATE_RESET })\r\n      history.push('/')\r\n    } else {\r\n      setName(customer.name)\r\n      setEmail(customer.email)\r\n      setPhone(customer.phone)\r\n      setHouse(customer.house)\r\n      setDescription(customer.description)\r\n      setStatus1(customer.status1)\r\n      setStatus2(customer.status2)\r\n      setStatus3(customer.status3)\r\n      setStatus4(customer.status4)\r\n    }\r\n    if (!customer.name || customer._id !== customerId) {\r\n      dispatch(getCustomerDetails(customerId))\r\n    } else {\r\n      setName(customer.name)\r\n      setEmail(customer.email)\r\n      setPhone(customer.phone)\r\n      setHouse(customer.house)\r\n      setDescription(customer.description)\r\n      setStatus1(customer.status1)\r\n      setStatus2(customer.status2)\r\n      setStatus3(customer.status3)\r\n      setStatus4(customer.status4)\r\n    }\r\n  }, [dispatch, history, customerId, customer, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateCustomer({\r\n        _id: customerId,\r\n        name,\r\n        email,\r\n        phone,\r\n        house,\r\n        description,\r\n        status1,\r\n        status2,\r\n        status3,\r\n        status4,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"pt-4\">\r\n        <LinkContainer to={`/`} className=\"float-right\">\r\n          <button className=\"btn btn-light\">Go Back</button>\r\n        </LinkContainer>\r\n        <FormContainer>\r\n          <br></br>\r\n          <h2>Edit Customer</h2>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"phone\">\r\n              <Form.Label>Phone</Form.Label>\r\n              <Form.Control\r\n                type=\"phone\"\r\n                placeholder=\"Enter phone\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"house\">\r\n              <Form.Label>House</Form.Label>\r\n              <Form.Control\r\n                type=\"house\"\r\n                placeholder=\"Enter house\"\r\n                value={house}\r\n                onChange={(e) => setHouse(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                type=\"description\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            {userInfo && userInfo.isAdmin ? (\r\n              <Form.Group controlId=\"status\">\r\n                <Form.Label>Status &nbsp;</Form.Label>\r\n                <Form.Check\r\n                  inline\r\n                  type=\"checkbox\"\r\n                  label=\"ส่งเสร็จ\"\r\n                  name=\"group1\"\r\n                  id=\"checkbox1\"\r\n                  checked={status1}\r\n                  onChange={(e) => setStatus1(e.target.checked)}\r\n                ></Form.Check>\r\n                <Form.Check\r\n                  inline\r\n                  type=\"checkbox\"\r\n                  label=\"พิจารณา\"\r\n                  name=\"group2\"\r\n                  id=\"checkbox2\"\r\n                  checked={status2}\r\n                  onChange={(e) => setStatus2(e.target.checked)}\r\n                ></Form.Check>\r\n                <Form.Check\r\n                  inline\r\n                  type=\"checkbox\"\r\n                  label=\"อนุมัติ\"\r\n                  name=\"group3\"\r\n                  id=\"checkbox3\"\r\n                  checked={status3}\r\n                  onChange={(e) => setStatus3(e.target.checked)}\r\n                ></Form.Check>\r\n                <Form.Check\r\n                  inline\r\n                  type=\"checkbox\"\r\n                  label=\"ปฏิเสธ\"\r\n                  name=\"group4\"\r\n                  id=\"checkbox4\"\r\n                  checked={status4}\r\n                  onChange={(e) => setStatus4(e.target.checked)}\r\n                ></Form.Check>\r\n              </Form.Group>\r\n            ) : null}\r\n\r\n            <Button className=\"btn-lg btn-dark\" type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </FormContainer>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\nexport default CustomEditScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { createCustomer } from '../actions/customerActions'\r\nconst CustomEditScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [house, setHouse] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [status1, setStatus1] = useState(false)\r\n  const [status2, setStatus2] = useState(false)\r\n  const [status3, setStatus3] = useState(false)\r\n  const [status4, setStatus4] = useState(false)\r\n\r\n  const customerCreate = useSelector((state) => state.customerCreate)\r\n  const { customerInfo, success } = customerCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/customer`)\r\n    }\r\n  }, [history, customerInfo, success])\r\n\r\n  const createHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createCustomer(\r\n        name,\r\n        email,\r\n        phone,\r\n        house,\r\n        description,\r\n        status1,\r\n        status2,\r\n        status3,\r\n        status4\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <br></br>\r\n      <h2>Create Customer</h2>\r\n      <Form onSubmit={createHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"phone\">\r\n          <Form.Label>Phone</Form.Label>\r\n          <Form.Control\r\n            type=\"phone\"\r\n            placeholder=\"Enter phone\"\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"house\">\r\n          <Form.Label>House</Form.Label>\r\n          <Form.Control\r\n            type=\"house\"\r\n            placeholder=\"Enter house\"\r\n            value={house}\r\n            onChange={(e) => setHouse(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            type=\"description\"\r\n            placeholder=\"Enter description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        {userInfo && userInfo.isAdmin ? (\r\n          <Form.Group controlId=\"status\">\r\n            <Form.Label>Status &nbsp;</Form.Label>\r\n            <Form.Check\r\n              inline\r\n              type=\"checkbox\"\r\n              label=\"ส่งเสร็จ\"\r\n              name=\"group1\"\r\n              id=\"checkbox1\"\r\n              checked={status1}\r\n              onChange={(e) => setStatus1(e.target.checked)}\r\n            ></Form.Check>\r\n            <Form.Check\r\n              inline\r\n              type=\"checkbox\"\r\n              label=\"พิจารณา\"\r\n              name=\"group2\"\r\n              id=\"checkbox2\"\r\n              checked={status2}\r\n              onChange={(e) => setStatus2(e.target.checked)}\r\n            ></Form.Check>\r\n            <Form.Check\r\n              inline\r\n              type=\"checkbox\"\r\n              label=\"อนุมัติ\"\r\n              name=\"group3\"\r\n              id=\"checkbox3\"\r\n              checked={status3}\r\n              onChange={(e) => setStatus3(e.target.checked)}\r\n            ></Form.Check>\r\n            <Form.Check\r\n              inline\r\n              type=\"checkbox\"\r\n              label=\"ปฏิเสธ\"\r\n              name=\"group4\"\r\n              id=\"checkbox4\"\r\n              checked={status4}\r\n              onChange={(e) => setStatus4(e.target.checked)}\r\n            ></Form.Check>\r\n          </Form.Group>\r\n        ) : null}\r\n\r\n        <Button className=\"btn-lg btn-dark\" type=\"submit\" variant=\"primary\">\r\n          Create\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\nexport default CustomEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Row, Container, Button } from 'react-bootstrap'\r\nimport { getCustomerDetails } from '../actions/customerActions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nexport default function DetailCustomerScreen({ match }) {\r\n  const customerId = match.params.id\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const customerDetails = useSelector((state) => state.customerDetails)\r\n  const { customer } = customerDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch(getCustomerDetails(customerId))\r\n  }, [dispatch, customerId, customer, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mt-5 pt-3 border hovor\">\r\n        <Row>\r\n          <Col>\r\n            <h2>Mywork</h2>\r\n          </Col>\r\n          <Col>\r\n            <h4>{customer._id} </h4>\r\n            <p>วันที่สร้าง {customer.createdAt}</p>\r\n            <p>ล่าสุด {customer.updatedAt}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h3>ชื่อ {customer.name}</h3>\r\n            <h3>อีเมล {customer.email}</h3>\r\n            <h3>บ้านที่อยู่ {customer.house}</h3>\r\n            <h3>รายละเอียด {customer.description}</h3>\r\n            <h3>ผู้บันทึก {customer.user.name}</h3>\r\n          </Col>\r\n          <Col>\r\n            <LinkContainer to={`/customer/${customer._id}/pdf`}>\r\n              <Button className=\"btn btn-danger btn-lg\"> PDF </Button>\r\n            </LinkContainer>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer'\r\nimport { getCustomerDetails } from '../actions/customerActions'\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\nimport Printer, { print } from 'react-pdf-print'\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#E4E4E4',\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    flexGrow: 1,\r\n  },\r\n})\r\nconst ids = ['1']\r\n\r\n// Create Document Component\r\nconst PDFScreen = ({ match }) => {\r\n  const customerId = match.params.id\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const customerDetails = useSelector((state) => state.customerDetails)\r\n  const { customer } = customerDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch(getCustomerDetails(customerId))\r\n  }, [dispatch, customerId, customer, userInfo])\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Printer>\r\n          <Col id={ids[0]} style={{ width: '210mm', height: '297mm' }}>\r\n            <Button\r\n              type=\"button\"\r\n              style={{ position: 'relative', float: 'right' }}\r\n              onClick={() => print(ids)}\r\n              value={customer.name}\r\n            >\r\n              Download\r\n            </Button>\r\n            <Document>\r\n              <Page size=\"A4\" style={styles.page}>\r\n                <View style={styles.section}>\r\n                  <Text>{customer._id}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                  <Text>{customer.createdAt}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                  <Text>{customer.updatedAt}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                  <Text>{customer.name}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                  <Text>{customer.email}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                  <Text>{customer.phone}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                  <Text>{customer.house}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                  <Text>{customer.description}</Text>\r\n                </View>\r\n                <View style={styles.section}>\r\n                  <Text>{customer.user.name}</Text>\r\n                </View>\r\n              </Page>\r\n            </Document>\r\n          </Col>\r\n        </Printer>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default PDFScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport Header from './components/Header'\nimport CustomerScreen from './screens/CustomerScreen'\nimport CustomerEditScreen from './screens/CustomerEditScreen'\nimport AddcustomerScreen from './screens/AddcustomerScreen'\nimport DetailCustomerScreen from './screens/DetailCustomerScreen'\nimport PDFScreen from './screens/PDFScreen'\n\nconst App = () => {\n  return (\n    <Router basename=\"/\">\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Switch>\n            <Route path=\"/\" exact component={LoginScreen} />\n            <Route path=\"/register\" exact component={RegisterScreen} />\n            <Route path=\"/customer\" exact component={CustomerScreen} />\n            <Route path=\"/customer/add\" exact component={AddcustomerScreen} />\n            <Route\n              path=\"/customer/:id/edit\"\n              exact\n              component={CustomerEditScreen}\n            />\n            <Route path=\"/customer/:id/pdf\" component={PDFScreen} />\n            <Route path=\"/customer/:id\" component={DetailCustomerScreen} />\n          </Switch>\n        </Container>\n      </main>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.css'\nReactDOM.render(\n  <Provider store={store}>\n    <App />,\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}